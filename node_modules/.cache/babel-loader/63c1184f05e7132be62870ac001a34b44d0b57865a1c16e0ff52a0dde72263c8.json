{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamanna\\\\OneDrive\\\\Desktop\\\\MediTrack\\\\src\\\\components\\\\MedicationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMedication } from '../context/MedicationContext';\nimport { Plus, Trash2, Clock } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MedicationForm() {\n  _s();\n  const {\n    addMedication\n  } = useMedication();\n  const [formData, setFormData] = useState({\n    name: '',\n    dosage: '',\n    frequency: 'daily',\n    times: ['08:00'],\n    notes: '',\n    startDate: new Date().toISOString().split('T')[0],\n    endDate: '',\n    reminderEnabled: true\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleTimeChange = (index, value) => {\n    const newTimes = [...formData.times];\n    newTimes[index] = value;\n    setFormData(prev => ({\n      ...prev,\n      times: newTimes\n    }));\n  };\n  const addTimeSlot = () => {\n    setFormData(prev => ({\n      ...prev,\n      times: [...prev.times, '08:00']\n    }));\n  };\n  const removeTimeSlot = index => {\n    if (formData.times.length > 1) {\n      const newTimes = formData.times.filter((_, i) => i !== index);\n      setFormData(prev => ({\n        ...prev,\n        times: newTimes\n      }));\n    }\n  };\n  const handleFrequencyChange = frequency => {\n    let defaultTimes = [];\n    switch (frequency) {\n      case 'once':\n        defaultTimes = ['08:00'];\n        break;\n      case 'twice':\n        defaultTimes = ['08:00', '20:00'];\n        break;\n      case 'three-times':\n        defaultTimes = ['08:00', '14:00', '20:00'];\n        break;\n      case 'four-times':\n        defaultTimes = ['08:00', '12:00', '16:00', '20:00'];\n        break;\n      default:\n        defaultTimes = ['08:00'];\n    }\n    setFormData(prev => ({\n      ...prev,\n      frequency,\n      times: defaultTimes\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formData.name.trim() || !formData.dosage.trim()) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    const medication = {\n      ...formData,\n      name: formData.name.trim(),\n      dosage: formData.dosage.trim(),\n      notes: formData.notes.trim(),\n      createdAt: new Date().toISOString()\n    };\n    addMedication(medication);\n\n    // Reset form\n    setFormData({\n      name: '',\n      dosage: '',\n      frequency: 'daily',\n      times: ['08:00'],\n      notes: '',\n      startDate: new Date().toISOString().split('T')[0],\n      endDate: '',\n      reminderEnabled: true\n    });\n    alert('Medication added successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '25px',\n        color: '#333'\n      },\n      children: \"\\u2795 Add New Medication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Medication Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleInputChange,\n          className: \"form-input\",\n          placeholder: \"e.g., Lisinopril, Metformin, Vitamin D\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dosage\",\n          children: \"Dosage *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"dosage\",\n          name: \"dosage\",\n          value: formData.dosage,\n          onChange: handleInputChange,\n          className: \"form-input\",\n          placeholder: \"e.g., 10mg, 2 tablets, 1 capsule\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Frequency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n            gap: '10px',\n            marginTop: '10px'\n          },\n          children: [{\n            value: 'once',\n            label: 'Once daily'\n          }, {\n            value: 'twice',\n            label: 'Twice daily'\n          }, {\n            value: 'three-times',\n            label: '3 times daily'\n          }, {\n            value: 'four-times',\n            label: '4 times daily'\n          }, {\n            value: 'custom',\n            label: 'Custom'\n          }].map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleFrequencyChange(option.value),\n            style: {\n              padding: '10px',\n              border: `2px solid ${formData.frequency === option.value ? '#667eea' : '#e1e5e9'}`,\n              borderRadius: '8px',\n              background: formData.frequency === option.value ? '#f0f3ff' : 'white',\n              color: formData.frequency === option.value ? '#667eea' : '#666',\n              cursor: 'pointer',\n              fontSize: '0.9rem'\n            },\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reminder Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), formData.times.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '10px',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 20,\n            color: \"#667eea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: time,\n            onChange: e => handleTimeChange(index, e.target.value),\n            className: \"form-input\",\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), formData.times.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeTimeSlot(index),\n            style: {\n              padding: '8px',\n              border: 'none',\n              borderRadius: '6px',\n              background: '#ffebee',\n              color: '#f44336',\n              cursor: 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addTimeSlot,\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px',\n            padding: '10px',\n            border: '2px dashed #667eea',\n            borderRadius: '8px',\n            background: 'transparent',\n            color: '#667eea',\n            cursor: 'pointer',\n            width: '100%',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), \"Add Another Time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: formData.startDate,\n            onChange: handleInputChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: formData.endDate,\n            onChange: handleInputChange,\n            className: \"form-input\",\n            min: formData.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Notes (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notes\",\n          name: \"notes\",\n          value: formData.notes,\n          onChange: handleInputChange,\n          className: \"form-textarea\",\n          rows: \"3\",\n          placeholder: \"Any special instructions, side effects to watch for, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"reminderEnabled\",\n            checked: formData.reminderEnabled,\n            onChange: handleInputChange,\n            style: {\n              width: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), \"Enable push notifications for reminders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '15px',\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), \"Add Medication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          style: {\n            flex: 1,\n            background: '#f5f5f5',\n            color: '#666'\n          },\n          onClick: () => {\n            setFormData({\n              name: '',\n              dosage: '',\n              frequency: 'daily',\n              times: ['08:00'],\n              notes: '',\n              startDate: new Date().toISOString().split('T')[0],\n              endDate: '',\n              reminderEnabled: true\n            });\n          },\n          children: \"Clear Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(MedicationForm, \"JQilUFiG1gFd2rIpJKP3tArSh3M=\", false, function () {\n  return [useMedication];\n});\n_c = MedicationForm;\nexport default MedicationForm;\nvar _c;\n$RefreshReg$(_c, \"MedicationForm\");","map":{"version":3,"names":["React","useState","useMedication","Plus","Trash2","Clock","jsxDEV","_jsxDEV","MedicationForm","_s","addMedication","formData","setFormData","name","dosage","frequency","times","notes","startDate","Date","toISOString","split","endDate","reminderEnabled","handleInputChange","e","value","type","checked","target","prev","handleTimeChange","index","newTimes","addTimeSlot","removeTimeSlot","length","filter","_","i","handleFrequencyChange","defaultTimes","handleSubmit","preventDefault","trim","alert","medication","createdAt","className","children","style","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","placeholder","required","display","gridTemplateColumns","gap","marginTop","label","map","option","onClick","padding","border","borderRadius","background","cursor","fontSize","time","alignItems","size","flex","width","justifyContent","min","rows","_c","$RefreshReg$"],"sources":["C:/Users/tamanna/OneDrive/Desktop/MediTrack/src/components/MedicationForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMedication } from '../context/MedicationContext';\r\nimport { Plus, Trash2, Clock } from 'lucide-react';\r\n\r\nfunction MedicationForm() {\r\n  const { addMedication } = useMedication();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    dosage: '',\r\n    frequency: 'daily',\r\n    times: ['08:00'],\r\n    notes: '',\r\n    startDate: new Date().toISOString().split('T')[0],\r\n    endDate: '',\r\n    reminderEnabled: true\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleTimeChange = (index, value) => {\r\n    const newTimes = [...formData.times];\r\n    newTimes[index] = value;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      times: newTimes\r\n    }));\r\n  };\r\n\r\n  const addTimeSlot = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      times: [...prev.times, '08:00']\r\n    }));\r\n  };\r\n\r\n  const removeTimeSlot = (index) => {\r\n    if (formData.times.length > 1) {\r\n      const newTimes = formData.times.filter((_, i) => i !== index);\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        times: newTimes\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFrequencyChange = (frequency) => {\r\n    let defaultTimes = [];\r\n    switch (frequency) {\r\n      case 'once':\r\n        defaultTimes = ['08:00'];\r\n        break;\r\n      case 'twice':\r\n        defaultTimes = ['08:00', '20:00'];\r\n        break;\r\n      case 'three-times':\r\n        defaultTimes = ['08:00', '14:00', '20:00'];\r\n        break;\r\n      case 'four-times':\r\n        defaultTimes = ['08:00', '12:00', '16:00', '20:00'];\r\n        break;\r\n      default:\r\n        defaultTimes = ['08:00'];\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      frequency,\r\n      times: defaultTimes\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.name.trim() || !formData.dosage.trim()) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    const medication = {\r\n      ...formData,\r\n      name: formData.name.trim(),\r\n      dosage: formData.dosage.trim(),\r\n      notes: formData.notes.trim(),\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    addMedication(medication);\r\n    \r\n    // Reset form\r\n    setFormData({\r\n      name: '',\r\n      dosage: '',\r\n      frequency: 'daily',\r\n      times: ['08:00'],\r\n      notes: '',\r\n      startDate: new Date().toISOString().split('T')[0],\r\n      endDate: '',\r\n      reminderEnabled: true\r\n    });\r\n\r\n    alert('Medication added successfully!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 style={{ marginBottom: '25px', color: '#333' }}>\r\n        ➕ Add New Medication\r\n      </h2>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Medication Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            className=\"form-input\"\r\n            placeholder=\"e.g., Lisinopril, Metformin, Vitamin D\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dosage\">Dosage *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"dosage\"\r\n            name=\"dosage\"\r\n            value={formData.dosage}\r\n            onChange={handleInputChange}\r\n            className=\"form-input\"\r\n            placeholder=\"e.g., 10mg, 2 tablets, 1 capsule\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Frequency</label>\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\r\n            gap: '10px',\r\n            marginTop: '10px'\r\n          }}>\r\n            {[\r\n              { value: 'once', label: 'Once daily' },\r\n              { value: 'twice', label: 'Twice daily' },\r\n              { value: 'three-times', label: '3 times daily' },\r\n              { value: 'four-times', label: '4 times daily' },\r\n              { value: 'custom', label: 'Custom' }\r\n            ].map(option => (\r\n              <button\r\n                key={option.value}\r\n                type=\"button\"\r\n                onClick={() => handleFrequencyChange(option.value)}\r\n                style={{\r\n                  padding: '10px',\r\n                  border: `2px solid ${formData.frequency === option.value ? '#667eea' : '#e1e5e9'}`,\r\n                  borderRadius: '8px',\r\n                  background: formData.frequency === option.value ? '#f0f3ff' : 'white',\r\n                  color: formData.frequency === option.value ? '#667eea' : '#666',\r\n                  cursor: 'pointer',\r\n                  fontSize: '0.9rem'\r\n                }}\r\n              >\r\n                {option.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Reminder Times</label>\r\n          {formData.times.map((time, index) => (\r\n            <div key={index} style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              gap: '10px',\r\n              marginBottom: '10px'\r\n            }}>\r\n              <Clock size={20} color=\"#667eea\" />\r\n              <input\r\n                type=\"time\"\r\n                value={time}\r\n                onChange={(e) => handleTimeChange(index, e.target.value)}\r\n                className=\"form-input\"\r\n                style={{ flex: 1 }}\r\n              />\r\n              {formData.times.length > 1 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeTimeSlot(index)}\r\n                  style={{\r\n                    padding: '8px',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    background: '#ffebee',\r\n                    color: '#f44336',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  <Trash2 size={16} />\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n          \r\n          <button\r\n            type=\"button\"\r\n            onClick={addTimeSlot}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '8px',\r\n              padding: '10px',\r\n              border: '2px dashed #667eea',\r\n              borderRadius: '8px',\r\n              background: 'transparent',\r\n              color: '#667eea',\r\n              cursor: 'pointer',\r\n              width: '100%',\r\n              justifyContent: 'center'\r\n            }}\r\n          >\r\n            <Plus size={16} />\r\n            Add Another Time\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ \r\n          display: 'grid', \r\n          gridTemplateColumns: '1fr 1fr',\r\n          gap: '15px'\r\n        }}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"startDate\">Start Date</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"startDate\"\r\n              name=\"startDate\"\r\n              value={formData.startDate}\r\n              onChange={handleInputChange}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"endDate\">End Date (Optional)</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"endDate\"\r\n              name=\"endDate\"\r\n              value={formData.endDate}\r\n              onChange={handleInputChange}\r\n              className=\"form-input\"\r\n              min={formData.startDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"notes\">Notes (Optional)</label>\r\n          <textarea\r\n            id=\"notes\"\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleInputChange}\r\n            className=\"form-textarea\"\r\n            rows=\"3\"\r\n            placeholder=\"Any special instructions, side effects to watch for, etc.\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"reminderEnabled\"\r\n              checked={formData.reminderEnabled}\r\n              onChange={handleInputChange}\r\n              style={{ width: 'auto' }}\r\n            />\r\n            Enable push notifications for reminders\r\n          </label>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '15px', marginTop: '30px' }}>\r\n          <button type=\"submit\" className=\"btn btn-primary\" style={{ flex: 1 }}>\r\n            <Plus size={16} />\r\n            Add Medication\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn\" \r\n            style={{ \r\n              flex: 1,\r\n              background: '#f5f5f5',\r\n              color: '#666'\r\n            }}\r\n            onClick={() => {\r\n              setFormData({\r\n                name: '',\r\n                dosage: '',\r\n                frequency: 'daily',\r\n                times: ['08:00'],\r\n                notes: '',\r\n                startDate: new Date().toISOString().split('T')[0],\r\n                endDate: '',\r\n                reminderEnabled: true\r\n              });\r\n            }}\r\n          >\r\n            Clear Form\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicationForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAc,CAAC,GAAGR,aAAa,CAAC,CAAC;EACzC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE,CAAC,OAAO,CAAC;IAChBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjDC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEZ,IAAI;MAAEa,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGH,CAAC,CAACI,MAAM;IAC/CjB,WAAW,CAACkB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACjB,IAAI,GAAGc,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAACC,KAAK,EAAEN,KAAK,KAAK;IACzC,MAAMO,QAAQ,GAAG,CAAC,GAAGtB,QAAQ,CAACK,KAAK,CAAC;IACpCiB,QAAQ,CAACD,KAAK,CAAC,GAAGN,KAAK;IACvBd,WAAW,CAACkB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACPd,KAAK,EAAEiB;IACT,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBtB,WAAW,CAACkB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACPd,KAAK,EAAE,CAAC,GAAGc,IAAI,CAACd,KAAK,EAAE,OAAO;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMmB,cAAc,GAAIH,KAAK,IAAK;IAChC,IAAIrB,QAAQ,CAACK,KAAK,CAACoB,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMH,QAAQ,GAAGtB,QAAQ,CAACK,KAAK,CAACqB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKP,KAAK,CAAC;MAC7DpB,WAAW,CAACkB,IAAI,KAAK;QACnB,GAAGA,IAAI;QACPd,KAAK,EAAEiB;MACT,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMO,qBAAqB,GAAIzB,SAAS,IAAK;IAC3C,IAAI0B,YAAY,GAAG,EAAE;IACrB,QAAQ1B,SAAS;MACf,KAAK,MAAM;QACT0B,YAAY,GAAG,CAAC,OAAO,CAAC;QACxB;MACF,KAAK,OAAO;QACVA,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;QACjC;MACF,KAAK,aAAa;QAChBA,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QAC1C;MACF,KAAK,YAAY;QACfA,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACnD;MACF;QACEA,YAAY,GAAG,CAAC,OAAO,CAAC;IAC5B;IAEA7B,WAAW,CAACkB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACPf,SAAS;MACTC,KAAK,EAAEyB;IACT,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,YAAY,GAAIjB,CAAC,IAAK;IAC1BA,CAAC,CAACkB,cAAc,CAAC,CAAC;IAElB,IAAI,CAAChC,QAAQ,CAACE,IAAI,CAAC+B,IAAI,CAAC,CAAC,IAAI,CAACjC,QAAQ,CAACG,MAAM,CAAC8B,IAAI,CAAC,CAAC,EAAE;MACpDC,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACF;IAEA,MAAMC,UAAU,GAAG;MACjB,GAAGnC,QAAQ;MACXE,IAAI,EAAEF,QAAQ,CAACE,IAAI,CAAC+B,IAAI,CAAC,CAAC;MAC1B9B,MAAM,EAAEH,QAAQ,CAACG,MAAM,CAAC8B,IAAI,CAAC,CAAC;MAC9B3B,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAAC2B,IAAI,CAAC,CAAC;MAC5BG,SAAS,EAAE,IAAI5B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDV,aAAa,CAACoC,UAAU,CAAC;;IAEzB;IACAlC,WAAW,CAAC;MACVC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,OAAO;MAClBC,KAAK,EAAE,CAAC,OAAO,CAAC;MAChBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjDC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFsB,KAAK,CAAC,gCAAgC,CAAC;EACzC,CAAC;EAED,oBACEtC,OAAA;IAAKyC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB1C,OAAA;MAAI2C,KAAK,EAAE;QAAEC,YAAY,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAEpD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELjD,OAAA;MAAMkD,QAAQ,EAAEf,YAAa;MAAAO,QAAA,gBAC3B1C,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1C,OAAA;UAAOmD,OAAO,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CjD,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXgC,EAAE,EAAC,MAAM;UACT9C,IAAI,EAAC,MAAM;UACXa,KAAK,EAAEf,QAAQ,CAACE,IAAK;UACrB+C,QAAQ,EAAEpC,iBAAkB;UAC5BwB,SAAS,EAAC,YAAY;UACtBa,WAAW,EAAC,wCAAwC;UACpDC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENjD,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1C,OAAA;UAAOmD,OAAO,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCjD,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXgC,EAAE,EAAC,QAAQ;UACX9C,IAAI,EAAC,QAAQ;UACba,KAAK,EAAEf,QAAQ,CAACG,MAAO;UACvB8C,QAAQ,EAAEpC,iBAAkB;UAC5BwB,SAAS,EAAC,YAAY;UACtBa,WAAW,EAAC,kCAAkC;UAC9CC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENjD,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1C,OAAA;UAAA0C,QAAA,EAAO;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBjD,OAAA;UAAK2C,KAAK,EAAE;YACVa,OAAO,EAAE,MAAM;YACfC,mBAAmB,EAAE,sCAAsC;YAC3DC,GAAG,EAAE,MAAM;YACXC,SAAS,EAAE;UACb,CAAE;UAAAjB,QAAA,EACC,CACC;YAAEvB,KAAK,EAAE,MAAM;YAAEyC,KAAK,EAAE;UAAa,CAAC,EACtC;YAAEzC,KAAK,EAAE,OAAO;YAAEyC,KAAK,EAAE;UAAc,CAAC,EACxC;YAAEzC,KAAK,EAAE,aAAa;YAAEyC,KAAK,EAAE;UAAgB,CAAC,EAChD;YAAEzC,KAAK,EAAE,YAAY;YAAEyC,KAAK,EAAE;UAAgB,CAAC,EAC/C;YAAEzC,KAAK,EAAE,QAAQ;YAAEyC,KAAK,EAAE;UAAS,CAAC,CACrC,CAACC,GAAG,CAACC,MAAM,iBACV9D,OAAA;YAEEoB,IAAI,EAAC,QAAQ;YACb2C,OAAO,EAAEA,CAAA,KAAM9B,qBAAqB,CAAC6B,MAAM,CAAC3C,KAAK,CAAE;YACnDwB,KAAK,EAAE;cACLqB,OAAO,EAAE,MAAM;cACfC,MAAM,EAAE,aAAa7D,QAAQ,CAACI,SAAS,KAAKsD,MAAM,CAAC3C,KAAK,GAAG,SAAS,GAAG,SAAS,EAAE;cAClF+C,YAAY,EAAE,KAAK;cACnBC,UAAU,EAAE/D,QAAQ,CAACI,SAAS,KAAKsD,MAAM,CAAC3C,KAAK,GAAG,SAAS,GAAG,OAAO;cACrE0B,KAAK,EAAEzC,QAAQ,CAACI,SAAS,KAAKsD,MAAM,CAAC3C,KAAK,GAAG,SAAS,GAAG,MAAM;cAC/DiD,MAAM,EAAE,SAAS;cACjBC,QAAQ,EAAE;YACZ,CAAE;YAAA3B,QAAA,EAEDoB,MAAM,CAACF;UAAK,GAbRE,MAAM,CAAC3C,KAAK;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcX,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjD,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1C,OAAA;UAAA0C,QAAA,EAAO;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC5B7C,QAAQ,CAACK,KAAK,CAACoD,GAAG,CAAC,CAACS,IAAI,EAAE7C,KAAK,kBAC9BzB,OAAA;UAAiB2C,KAAK,EAAE;YACtBa,OAAO,EAAE,MAAM;YACfe,UAAU,EAAE,QAAQ;YACpBb,GAAG,EAAE,MAAM;YACXd,YAAY,EAAE;UAChB,CAAE;UAAAF,QAAA,gBACA1C,OAAA,CAACF,KAAK;YAAC0E,IAAI,EAAE,EAAG;YAAC3B,KAAK,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnCjD,OAAA;YACEoB,IAAI,EAAC,MAAM;YACXD,KAAK,EAAEmD,IAAK;YACZjB,QAAQ,EAAGnC,CAAC,IAAKM,gBAAgB,CAACC,KAAK,EAAEP,CAAC,CAACI,MAAM,CAACH,KAAK,CAAE;YACzDsB,SAAS,EAAC,YAAY;YACtBE,KAAK,EAAE;cAAE8B,IAAI,EAAE;YAAE;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EACD7C,QAAQ,CAACK,KAAK,CAACoB,MAAM,GAAG,CAAC,iBACxB7B,OAAA;YACEoB,IAAI,EAAC,QAAQ;YACb2C,OAAO,EAAEA,CAAA,KAAMnC,cAAc,CAACH,KAAK,CAAE;YACrCkB,KAAK,EAAE;cACLqB,OAAO,EAAE,KAAK;cACdC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,UAAU,EAAE,SAAS;cACrBtB,KAAK,EAAE,SAAS;cAChBuB,MAAM,EAAE;YACV,CAAE;YAAA1B,QAAA,eAEF1C,OAAA,CAACH,MAAM;cAAC2E,IAAI,EAAE;YAAG;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CACT;QAAA,GA7BOxB,KAAK;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8BV,CACN,CAAC,eAEFjD,OAAA;UACEoB,IAAI,EAAC,QAAQ;UACb2C,OAAO,EAAEpC,WAAY;UACrBgB,KAAK,EAAE;YACLa,OAAO,EAAE,MAAM;YACfe,UAAU,EAAE,QAAQ;YACpBb,GAAG,EAAE,KAAK;YACVM,OAAO,EAAE,MAAM;YACfC,MAAM,EAAE,oBAAoB;YAC5BC,YAAY,EAAE,KAAK;YACnBC,UAAU,EAAE,aAAa;YACzBtB,KAAK,EAAE,SAAS;YAChBuB,MAAM,EAAE,SAAS;YACjBM,KAAK,EAAE,MAAM;YACbC,cAAc,EAAE;UAClB,CAAE;UAAAjC,QAAA,gBAEF1C,OAAA,CAACJ,IAAI;YAAC4E,IAAI,EAAE;UAAG;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,oBAEpB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENjD,OAAA;QAAK2C,KAAK,EAAE;UACVa,OAAO,EAAE,MAAM;UACfC,mBAAmB,EAAE,SAAS;UAC9BC,GAAG,EAAE;QACP,CAAE;QAAAhB,QAAA,gBACA1C,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1C,OAAA;YAAOmD,OAAO,EAAC,WAAW;YAAAT,QAAA,EAAC;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7CjD,OAAA;YACEoB,IAAI,EAAC,MAAM;YACXgC,EAAE,EAAC,WAAW;YACd9C,IAAI,EAAC,WAAW;YAChBa,KAAK,EAAEf,QAAQ,CAACO,SAAU;YAC1B0C,QAAQ,EAAEpC,iBAAkB;YAC5BwB,SAAS,EAAC;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENjD,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1C,OAAA;YAAOmD,OAAO,EAAC,SAAS;YAAAT,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDjD,OAAA;YACEoB,IAAI,EAAC,MAAM;YACXgC,EAAE,EAAC,SAAS;YACZ9C,IAAI,EAAC,SAAS;YACda,KAAK,EAAEf,QAAQ,CAACW,OAAQ;YACxBsC,QAAQ,EAAEpC,iBAAkB;YAC5BwB,SAAS,EAAC,YAAY;YACtBmC,GAAG,EAAExE,QAAQ,CAACO;UAAU;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjD,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1C,OAAA;UAAOmD,OAAO,EAAC,OAAO;UAAAT,QAAA,EAAC;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CjD,OAAA;UACEoD,EAAE,EAAC,OAAO;UACV9C,IAAI,EAAC,OAAO;UACZa,KAAK,EAAEf,QAAQ,CAACM,KAAM;UACtB2C,QAAQ,EAAEpC,iBAAkB;UAC5BwB,SAAS,EAAC,eAAe;UACzBoC,IAAI,EAAC,GAAG;UACRvB,WAAW,EAAC;QAA2D;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENjD,OAAA;QAAKyC,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB1C,OAAA;UAAO2C,KAAK,EAAE;YAAEa,OAAO,EAAE,MAAM;YAAEe,UAAU,EAAE,QAAQ;YAAEb,GAAG,EAAE;UAAO,CAAE;UAAAhB,QAAA,gBACnE1C,OAAA;YACEoB,IAAI,EAAC,UAAU;YACfd,IAAI,EAAC,iBAAiB;YACtBe,OAAO,EAAEjB,QAAQ,CAACY,eAAgB;YAClCqC,QAAQ,EAAEpC,iBAAkB;YAC5B0B,KAAK,EAAE;cAAE+B,KAAK,EAAE;YAAO;UAAE;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,2CAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENjD,OAAA;QAAK2C,KAAK,EAAE;UAAEa,OAAO,EAAE,MAAM;UAAEE,GAAG,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAjB,QAAA,gBAC9D1C,OAAA;UAAQoB,IAAI,EAAC,QAAQ;UAACqB,SAAS,EAAC,iBAAiB;UAACE,KAAK,EAAE;YAAE8B,IAAI,EAAE;UAAE,CAAE;UAAA/B,QAAA,gBACnE1C,OAAA,CAACJ,IAAI;YAAC4E,IAAI,EAAE;UAAG;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,kBAEpB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjD,OAAA;UACEoB,IAAI,EAAC,QAAQ;UACbqB,SAAS,EAAC,KAAK;UACfE,KAAK,EAAE;YACL8B,IAAI,EAAE,CAAC;YACPN,UAAU,EAAE,SAAS;YACrBtB,KAAK,EAAE;UACT,CAAE;UACFkB,OAAO,EAAEA,CAAA,KAAM;YACb1D,WAAW,CAAC;cACVC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE,EAAE;cACVC,SAAS,EAAE,OAAO;cAClBC,KAAK,EAAE,CAAC,OAAO,CAAC;cAChBC,KAAK,EAAE,EAAE;cACTC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cACjDC,OAAO,EAAE,EAAE;cACXC,eAAe,EAAE;YACnB,CAAC,CAAC;UACJ,CAAE;UAAA0B,QAAA,EACH;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC/C,EAAA,CAnUQD,cAAc;EAAA,QACKN,aAAa;AAAA;AAAAmF,EAAA,GADhC7E,cAAc;AAqUvB,eAAeA,cAAc;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}